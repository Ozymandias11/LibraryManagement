@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.AspNetCore.Localization
@using Microsoft.Extensions.Options

@inject SignInManager<Library.Model.Models.Employee> SignInManager
@inject UserManager<Library.Model.Models.Employee> UserManager
@inject IViewLocalizer Localizer
@inject IOptions<RequestLocalizationOptions> LocalizationOptions

@{
    var requestCulture = Context.Features.Get<IRequestCultureFeature>();
    var cultureItems = LocalizationOptions.Value.SupportedUICultures
        .Select(c => new SelectListItem { Value = c.Name, Text = c.NativeName })
        .ToList();
}

<div class="text-center">
    <ul class="navbar-nav">

        <li class="nav-item">
            <form id="selectLanguage" asp-controller="Home" asp-action="SetLanguage" asp-route-returnUrl="@Context.Request.Path" method="post" class="form-inline">
                <select name="culture" onchange="this.form.submit();" class="form-control" asp-for="@requestCulture.RequestCulture.UICulture.Name" asp-items="cultureItems">
                </select>
            </form>
        </li>
        @if (SignInManager.IsSignedIn(User))
        {
            <li class="nav-item active mt-2">
                <a class="nav-link" asp-area="" asp-controller="Account" asp-action="Logout">@Localizer["Logout"]</a>
            </li>
        }
        else
        {
            <li class="nav-item active">
                <a class="nav-link" asp-area="" asp-controller="Account" asp-action="Register">@Localizer["Register"]</a>
            </li>
            <li class="nav-item active">
                <a class="nav-link" asp-area="" asp-controller="Account" asp-action="Login">@Localizer["Login"]</a>
            </li>
        }
    </ul>
</div>

<script>
    $(document).ready(function () {
        $("#selectLanguage").on("change", function () {
            this.submit();
        });
    });
</script>
