@model IEnumerable<(string displayName, string column)>
@{
    var orderBy = Context.Request.Query["OrderBy"].ToString();
    var currentSearchString = ViewData["CurrentSearchString"] as string;
    var actionName = ViewData["ActionName"] as string;
    var currentPage = ViewBag.CurrentPage ?? 1;
}

@foreach (var (displayName, column) in Model)
{
    <th class="text-primary text-center">
        @{
            string currentDirection = "";
            if (orderBy.StartsWith(column, StringComparison.OrdinalIgnoreCase))
            {
                currentDirection = orderBy.EndsWith("desc", StringComparison.OrdinalIgnoreCase) ? "desc" : "asc";
            }

            string nextOrderBy = currentDirection == "" ? $"{column} asc" :
            currentDirection == "asc" ? $"{column} desc" : "";

            var routeValues = new Dictionary<string, object>
                {
                    ["OrderBy"] = nextOrderBy,
                    ["SearchString"] = currentSearchString,
                    ["PageNumber"] = currentPage
                };
        }
        <a href="@Url.Action(actionName, routeValues)" class="text-primary">
            @displayName
            @if (orderBy.StartsWith(column, StringComparison.OrdinalIgnoreCase))
            {
                <i class="fas fa-@(currentDirection == "asc" ? "arrow-up" : "arrow-down")"></i>
            }
            else
            {
                <i class="fas fa-sort"></i>
            }
        </a>
    </th>
}