@model LibraryManagement.ViewModels.Library.ViewModels.PagedViewModel<LibraryManagement.ViewModels.Library.ViewModels.BookCopyLogsViewModel>
@{
    ViewData["Title"] = "Book Copy Logs";
    var originalBookId = Context.Request.Query["originalBookId"].ToString();
    var publisherId = Context.Request.Query["publisherId"].ToString();
    var edition = Context.Request.Query["edition"].ToString();
}
<div class="card">
    <div class="card-body">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h2 class="text-primary mb-0">Book Copy Logs</h2>
            <a asp-controller="BookCopy" asp-action="BookCopies" class="btn btn-primary">
                <i class="fas fa-arrow-left"></i> Back to Book Copies
            </a>
        </div>

        <form method="get" class="mb-3" id="filterForm">
            <input type="hidden" name="originalBookId" value="@originalBookId" />
            <input type="hidden" name="publisherId" value="@publisherId" />
            <input type="hidden" name="edition" value="@edition" />
            <div class="row">
                <div class="col-md-3">
                    <label for="startDate">Start Date:</label>
                    <input type="date" id="startDate" name="StartDate" class="form-control" value="@Context.Request.Query["StartDate"]">
                </div>
                <div class="col-md-3">
                    <label for="endDate">End Date:</label>
                    <input type="date" id="endDate" name="EndDate" class="form-control" value="@Context.Request.Query["EndDate"]">
                </div>
                <div class="col-md-3 align-self-end">
                    <button type="submit" class="btn btn-primary">Filter</button>
                </div>
            </div>
        </form>

        <div class="table-responsive">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th class="text-center">Date</th>
                        <th class="text-center">Action</th>
                        <th class="text-center">Quantity</th>
                        <th class="text-center">Reason</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var log in Model.Items)
                    {
                        <tr>
                            <td class="text-center">@log.TimeStamp.ToString("g")</td>
                            <td class="text-center">@log.State</td>
                            <td class="text-center">@log.QuantityModified</td>
                            <td class="text-center">@log.Message</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        @await Html.PartialAsync("_Pagination", (
                 CurrentPage: Model.MetaData.CurrentPage,
                 TotalPages: Model.MetaData.TotalPages,
                 PageSize: Model.MetaData.PageSize,
                 TotalCount: Model.MetaData.TotalCount,
                 OrderBy: ViewBag.OrderBy,
                 SearchString: ViewData["CurrentSearchString"] as string,
                 ControllerName: ViewContext.RouteData.Values["controller"].ToString(),
                 ActionName: ViewContext.RouteData.Values["action"].ToString()
                 ))
    </div>
</div>

@section Scripts {
    <script src="~/js/Shared/pagination.js"></script>
    <script>
        var originalBookId = '@originalBookId';
        var publisherId = '@publisherId';
        var edition = '@edition';
    </script>
}