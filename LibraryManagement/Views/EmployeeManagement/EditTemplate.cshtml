@model LibraryManagement.ViewModels.EmailTemplateViewModel;


<div class="container mt-2">
    <div class="row justify-content-center">
        <div class="col-lg-10">
            <div class="card bg-secondary shadow border-0">
                <div class="card-body px-lg-5 py-lg-5">
                    <div class="text-center mb-4">
                        <h2 class="text-primary mb-0">Edit Templates</h2>
                    </div>
                    <form asp-action="EditTemplate" asp-route-id="@Model.Id" method="post" id="edit-template-form">
                        <div class="form-group">
                            <label for="subject" class="form-control-label">Subject</label>
                            <input type="text" class="form-control" id="subject" name="Subject" value="@Model.Subject" placeholder="Enter subject" data-placeholder="@Model.Subject">
                        </div>
                        <div class="form-group">
                            <label for="body" class="form-control-label">Body</label>
                            <textarea class="form-control" id="body" name="Body" rows="5" placeholder="Enter body" data-placeholder="@Model.Body">@Model.Body</textarea>
                        </div>
                        <div class="text-center">
                            <button type="submit" class="btn btn-primary btn-lg mr-4" id="save-changes-button" style="display: none;">Save Changes</button>
                            <a asp-action="Templates" class="btn btn-neutral btn-lg">Cancel</a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const form = document.getElementById('edit-template-form');
        const saveButton = document.getElementById('save-changes-button');

        // Function to check if any values have changed from the placeholders
        function checkForChanges() {
            let hasChanges = false;
            Array.from(form.elements).forEach(element => {
                if (element.hasAttribute('data-placeholder')) {
                    const placeholder = element.getAttribute('data-placeholder');
                    if (element.value !== placeholder) {
                        hasChanges = true;
                    }
                }
            });
            saveButton.style.display = hasChanges ? 'inline-block' : 'none';
        }

        // Add event listeners to detect changes
        form.addEventListener('input', checkForChanges);
        form.addEventListener('change', checkForChanges);

        // Initial check in case of autofill or pre-filled data
        checkForChanges();
    });
</script>

<style>
    Here is the updated CSS with only the classes present in the provided HTML:

    :root {
        --blue: #5e72e4;
        --indigo: #5603ad;
        --purple: #8965e0;
        --pink: #f3a4b5;
        --red: #f5365c;
        --orange: #fb6340;
        --yellow: #ffd600;
        --green: #2dce89;
        --teal: #11cdef;
        --cyan: #2bffc6;
        --white: #fff;
        --gray: #8898aa;
        --gray-dark: #32325d;
        --light: #ced4da;
        --lighter: #e9ecef;
        --primary: #5e72e4;
        --secondary: #f7fafc;
        --success: #2dce89;
        --info: #11cdef;
        --warning: #fb6340;
        --danger: #f5365c;
        --light: #adb5bd;
        --dark: #212529;
        --default: #172b4d;
        --white: #fff;
        --neutral: #fff;
        --darker: black;
        --breakpoint-xs: 0;
        --breakpoint-sm: 576px;
        --breakpoint-md: 768px;
        --breakpoint-lg: 992px;
        --breakpoint-xl: 1200px;
        --font-family-sans-serif: Open Sans, sans-serif;
        --font-family-monospace: SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace;
    }

    *,
    *::before,
    *::after {
        box-sizing: border-box;
    }

    html {
        font-family: sans-serif;
        line-height: 1.15;
        -webkit-text-size-adjust: 100%;
        -ms-text-size-adjust: 100%;
        -ms-overflow-style: scrollbar;
        -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
    }

    body {
        font-family: Open Sans, sans-serif;
        font-size: 1rem;
        font-weight: 400;
        line-height: 1.5;
        margin: 0;
        text-align: left;
        color: #525f7f;
    }

    a {
        text-decoration: none;
        color: #5e72e4;
        background-color: transparent;
        -webkit-text-decoration-skip: objects;
    }

        a:hover {
            text-decoration: none;
            color: #233dd2;
        }

    img {
        vertical-align: middle;
        border-style: none;
    }

    button {
        border-radius: 0;
    }

        button:focus {
            outline: 1px dotted;
            outline: 5px auto -webkit-focus-ring-color;
        }

    input,
    button {
        font-family: inherit;
        font-size: inherit;
        line-height: inherit;
        margin: 0;
    }

    button,
    input {
        overflow: visible;
    }

    button {
        text-transform: none;
    }

    button,
    html [type='button'],
    [type='reset'],
    [type='submit'] {
        -webkit-appearance: button;
    }

        button::-moz-focus-inner,
        [type='button']::-moz-focus-inner,
        [type='reset']::-moz-focus-inner,
        [type='submit']::-moz-focus-inner {
            padding: 0;
            border-style: none;
        }

    .btn {
        font-size: 1rem;
        font-weight: 600;
        line-height: 1.5;
        display: inline-block;
        padding: .625rem 1.25rem;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
        transition: color .15s ease-in-out, background-color .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out;
        text-align: center;
        vertical-align: middle;
        white-space: nowrap;
        border: 1px solid transparent;
        border-radius: .375rem;
    }

    .btn-primary {
        color: #fff;
        border-color: #5e72e4;
        background-color: #5e72e4;
        box-shadow: 0 4px 6px rgba(50, 50, 93, .11), 0 1px 3px rgba(0, 0, 0, .08);
    }

        .btn-primary:hover {
            color: #fff;
            border-color: #5e72e4;
            background-color: #5e72e4;
        }

        .btn-primary:focus {
            box-shadow: 0 4px 6px rgba(50, 50, 93, .11), 0 1px 3px rgba(0, 0, 0, .08), 0 0 0 0 rgba(94, 114, 228, .5);
        }

    .btn-neutral {
        color: #212529;
        border-color: #fff;
        background-color: #fff;
        box-shadow: 0 4px 6px rgba(50, 50, 93, .11), 0 1px 3px rgba(0, 0, 0, .08);
    }

        .btn-neutral:hover {
            color: #212529;
            border-color: white;
            background-color: white;
        }

        .btn-neutral:focus {
            box-shadow: 0 4px 6px rgba(50, 50, 93, .11), 0 1px 3px rgba(0, 0, 0, .08), 0 0 0 0 rgba(255, 255, 255, .5);
        }

    .btn-sm {
        font-size: .875rem;
        line-height: 1.5;
        padding: .25rem .5rem;
        border-radius: .375rem;
    }

    .card {
        position: relative;
        display: flex;
        flex-direction: column;
        min-width: 0;
        word-wrap: break-word;
        border: 1px solid rgba(0, 0, 0, .05);
        border-radius: .375rem;
        background-color: #fff;
        background-clip: border-box;
    }

        .card > hr {
            margin-right: 0;
            margin-left: 0;
        }

    .card-body {
        padding: 1.5rem;
        flex: 1 1 auto;
    }

    .card-header {
        margin-bottom: 0;
        padding: 1.25rem 1.5rem;
        border-bottom: 1px solid rgba(0, 0, 0, .05);
        background-color: #fff;
    }

        .card-header:first-child {
            border-radius: calc(.375rem - 1px) calc(.375rem - 1px) 0 0;
        }

    .form-control {
        font-size: 1rem;
        line-height: 1.5;
        display: block;
        width: 100%;
        height: calc(2.75rem + 2px);
        padding: .625rem .75rem;
        transition: all .2s cubic-bezier(.68, -.55, .265, 1.55);
        color: #8898aa;
        border: 1px solid #cad1d7;
        border-radius: .375rem;
        background-color: #fff;
        background-clip: padding-box;
        box-shadow: none;
    }

        .form-control::-ms-expand {
            border: 0;
            background-color: transparent;
        }

        .form-control:focus {
            color: #8898aa;
            border-color: rgba(50, 151, 211, .25);
            outline: 0;
            background-color: #fff;
            box-shadow: none, none;
        }

        .form-control:-ms-input-placeholder {
            opacity: 1;
            color: #adb5bd;
        }

        .form-control::-ms-input-placeholder {
            opacity: 1;
            color: #adb5bd;
        }

        .form-control::placeholder {
            opacity: 1;
            color: #adb5bd;
        }

        .form-control:disabled,
        .form-control[readonly] {
            opacity: 1;
            background-color: #e9ecef;
        }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .row {
        display: flex;
        margin-right: -15px;
        margin-left: -15px;
        flex-wrap: wrap;
    }

    .col-4,
    .col-8,
    .col-lg-12 {
        position: relative;
        width: 100%;
        min-height: 1px;
        padding-right: 15px;
        padding-left: 15px;
    }

    .col-4 {
        max-width: 33.33333%;
        flex: 0 0 33.33333%;
    }

    .col-8 {
        max-width: 66.66667%;
        flex: 0 0 66.66667%;
    }



    .bg-secondary {
        background-color: #f7fafc !important;
    }

    a.bg-secondary:hover,
    a.bg-secondary:focus,
    button.bg-secondary:hover,
    button.bg-secondary:focus {
        background-color: #d2e3ee !important;
    }

    .pt-10 {
        padding-top: 6rem !important;
    }

    .pb-8 {
        padding-bottom: 8rem !important;
    }

    .m-auto {
        margin: auto !important;
    }

    .ml-auto,
    .mx-auto {
        margin-left: auto !important;
    }

    .mr-auto,
    .mx-auto {
        margin-right: auto !important;
    }

    .mb-5 {
        margin-bottom: 3rem !important;
    }

    .mt-7 {
        margin-top: 6rem !important;
    }

    .mb-0 {
        margin-bottom: 0 !important;
    }

    .text-center {
        text-align: center !important;
    }



    figcaption,
    main {
        display: block;
    }

    main {
        overflow: hidden;
    }

    .bg-white {
        background-color: #fff !important;
    }

    a.bg-white:hover,
    a.bg-white:focus,
    button.bg-white:hover,
    button.bg-white:focus {
        background-color: #e6e6e6 !important;
    }

    .bg-gradient-default {
        background: linear-gradient(87deg, #172b4d 0, #1a174d 100%) !important;
    }

    .bg-gradient-default {
        background: linear-gradient(87deg, #172b4d 0, #1a174d 100%) !important;
    }

    .opacity-8 {
        opacity: .8 !important;
    }

    .opacity-8 {
        opacity: .9 !important;
    }

    .center {
        left: 50%;
        transform: translateX(-50%);
    }

    .form-control-label {
        font-size: .875rem;
        font-weight: 600;
        color: #525f7f;
    }

    .form-control-alternative {
        transition: box-shadow .15s ease;
        border: 0;
        box-shadow: 0 1px 3px rgba(50, 50, 93, .15), 0 1px 0 rgba(0, 0, 0, .02);
    }

        .form-control-alternative:focus {
            box-shadow: 0 4px 6px rgba(50, 50, 93, .11), 0 1px 3px rgba(0, 0, 0, .08);
        }

    .focused .form-control {
        border-color: rgba(50, 151, 211, .25);
    }

    .focused .input-group-text {
        color: #8898aa;
        border-color: rgba(50, 151, 211, .25);
        background-color: #fff;
    }

    .focused .input-group-alternative {
        box-shadow: 0 4px 6px rgba(50, 50, 93, .11), 0 1px 3px rgba(0, 0, 0, .08) !important;
    }

    .input-group {
        transition: all .15s ease;
        border-radius: .375rem;
        box-shadow: none;
    }

        .input-group .form-control {
            box-shadow: none;
        }

            .input-group .form-control:not(:first-child) {
                padding-left: 0;
                border-left: 0;
            }

            .input-group .form-control:not(:last-child) {
                padding-right: 0;
                border-right: 0;
            }

            .input-group .form-control:focus {
                box-shadow: none;
            }

    .input-group-text {
        transition: all .2s cubic-bezier(.68, -.55, .265, 1.55);
    }

    .input-group-alternative {
        transition: box-shadow .15s ease;
        border: 0;
        box-shadow: 0 1px 3px rgba(50, 50, 93, .15), 0 1px 0 rgba(0, 0, 0, .02);
    }

        .input-group-alternative .form-control,
        .input-group-alternative .input-group-text {
            border: 0;
            box-shadow: none;
        }

    .header {
        position: relative;
    }

    .mask {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        transition: all .15s ease;
    }



    p {
        font-size: 1rem;
        font-weight: 300;
        line-height: 1.7;
    }
</style>




<style>
    .button-spacing {
        margin-right: 20px;
    }
</style>

@section scripts {
    <script src="https://cdn.tiny.cloud/1/vdh7pz7fz2x78bto42f6p7d6o84o8822qozh4qzzp0y9y3nv/tinymce/5/tinymce.min.js" referrerpolicy="origin"></script>
    <script>
        tinymce.init({
            selector: '#body',
            plugins: 'code',
            toolbar: 'undo redo | bold italic | alignleft aligncenter alignright | code',
            height: 300
        });

        // preview functionality
        document.queryselector('form').addeventlistener('submit', function (event) {
            event.preventdefault();
            var form = event.target;
            var formdata = new formdata(form);

            fetch('/admin/previewtemplate', {
                method: 'post',
                body: formdata
            })
            .then(response => response.text())
            .then(html => {
                document.getelementbyid('previewcontainer').innerhtml = html;
            });
        });
    </script>
}
