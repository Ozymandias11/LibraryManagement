@model LibraryManagement.ViewModels.Library.ViewModels.PagedViewModel<LibraryManagement.ViewModels.Library.ViewModels.BookCopyViewModel>

@{
    ViewData["Title"] = "Book Copies";
    ViewData["ActionUrl"] = "BookCopies";
    ViewData["ActionName"] = "BookCopies";
    ViewData["CurrentPage"] = Model.MetaData.CurrentPage;
    var sortableColumns = new[]
    {
        ("Book Title", "BookTitle"),
        ("Publisher Name", "PublisherName"),
        ("Edition", "Edition")
    };
}

<div class="card">
    <div class="card-body">
        <div class="d-flex justify-content-center mb-3">
            <h2 class="text-primary mb-0">Book Copies</h2>
        </div>
        <table>
            <tr>
                @await Html.PartialAsync("_SearchForm", ViewData["CurrentSearchString"] as string)
            </tr>
        </table>
        <div class="table-responsive wide-table">
            <table class="table table-striped">
                <thead>
                    <tr>
                        @await Html.PartialAsync("_SortableHeader", sortableColumns)
                        <th class="text-primary text-center">Number of Pages</th>
                        <th class="text-primary text-center">Status</th>
                        <th class="text-primary text-center">Quantity</th>
                        <th class="text-primary text-center">Room</th>
                        <th class="text-primary text-center">Shelf</th>
                        <th class="text-primary text-center">Actions</th>
                    </tr>
                </thead>
                <tbody id="tableBody">
                    @foreach (var bookCopy in Model.Items)
                    {
                        <tr>
                            <td class="text-center">@bookCopy.BookTitle</td>
                            <td class="text-center">@bookCopy.PublisherName</td>
                            <td class="text-center">@bookCopy.Edition</td>
                            <td class="text-center">@bookCopy.NumberOfPages</td>
                            <td class="text-center">@bookCopy.Status</td>
                            <td class="text-center">@bookCopy.Quantity</td>
                            <td class="text-center">@bookCopy.RoomNumber</td>
                            <td class="text-center">@bookCopy.ShelfNumber</td>
                            <td class="text-center">
                                <div class="d-flex justify-content-center">
                                    <button class="btn btn-sm btn-primary me-2"
                                            style="margin-right: 5px;"
                                            data-toggle="modal"
                                            data-target="#addQuantityModal"
                                            data-book-id="@bookCopy.OriginaBookId"
                                            data-publisher-id="@bookCopy.PublisherId"
                                            data-edition="@bookCopy.Edition"
                                            data-book-title="@bookCopy.BookTitle"
                                            data-room-id="@bookCopy.RoomId"
                                            data-shelf-id="@bookCopy.ShelfId"
                                            data-book-shelf-id="@bookCopy.BookCopyShelfId">
                                        Modify
                                    </button>
                                    <a href="@Url.Action("Index", "BookCopyLogs", new { originalBookId = bookCopy.OriginaBookId, publisherId = bookCopy.PublisherId, edition = bookCopy.Edition })"
                                       class="btn btn-sm btn-info"
                                       style="margin-left: 10px;">
                                        Logs
                                    </a>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <a asp-action="CreateBookCopy" class="btn btn-primary">Add Book Copy</a>
        </div>
        @await Html.PartialAsync("_Pagination", (
                 CurrentPage: Model.MetaData.CurrentPage,
                 TotalPages: Model.MetaData.TotalPages,
                 PageSize: Model.MetaData.PageSize,
                 TotalCount: Model.MetaData.TotalCount,
                 OrderBy: ViewBag.OrderBy,
                 SearchString: ViewData["CurrentSearchString"] as string,
                 ControllerName: ViewContext.RouteData.Values["controller"].ToString(),
                 ActionName: ViewContext.RouteData.Values["action"].ToString()
                 ))
    </div>
</div>

@await Html.PartialAsync("_AddQuantityModal", new LibraryManagement.ViewModels.Library.ViewModels.ModifyBookCopiesViewModel())

@section Scripts {
    <script src="~/js/Modals/add-quantity-modal.js"></script>
     <script src="~/js/Shared/pagination.js"></script>
    <script>
        $.noConflict();
        jQuery(document).ready(function ($) {
            initializeAddQuantityModal();
        });
    </script>
}